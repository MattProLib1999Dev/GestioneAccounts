// <auto-generated />
<<<<<<< HEAD
using System;
=======
>>>>>>> origin/main
using GestioneAccounts.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestioneAccounts.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestioneAccounts.DataAccess.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

<<<<<<< HEAD
                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
=======
                    b.Property<string>("Nome")
                        .IsRequired()
>>>>>>> origin/main
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

<<<<<<< HEAD
            modelBuilder.Entity("Valori", b =>
=======
            modelBuilder.Entity("matteo.proietti.progetti.Progetti_personali_e_esercitazioni.esercitazioni_dotnet.GestioneAccounts.BE.Domain.Models.Valore", b =>
>>>>>>> origin/main
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

<<<<<<< HEAD
                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataCreazione")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
=======
                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Voce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valore")
>>>>>>> origin/main
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.ToTable("Valori");
                });

            modelBuilder.Entity("Valori", b =>
                {
                    b.HasOne("GestioneAccounts.DataAccess.Account", "Account")
                        .WithMany("Valori")
                        .HasForeignKey("Id");

                    b.Navigation("Account");
=======
                    b.HasIndex("AccountId");

                    b.ToTable("Valore");
                });

            modelBuilder.Entity("matteo.proietti.progetti.Progetti_personali_e_esercitazioni.esercitazioni_dotnet.GestioneAccounts.BE.Domain.Models.Valore", b =>
                {
                    b.HasOne("GestioneAccounts.DataAccess.Account", null)
                        .WithMany("valori")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
>>>>>>> origin/main
                });

            modelBuilder.Entity("GestioneAccounts.DataAccess.Account", b =>
                {
<<<<<<< HEAD
                    b.Navigation("Valori");
=======
                    b.Navigation("valori");
>>>>>>> origin/main
                });
#pragma warning restore 612, 618
        }
    }
}
